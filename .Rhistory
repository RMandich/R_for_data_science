library(tidyverse)
#> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
#> ✔ ggplot2 3.3.2     ✔ purrr   0.3.4
#> ✔ tibble  3.0.3     ✔ dplyr   1.0.2
#> ✔ tidyr   1.1.2     ✔ stringr 1.4.0
#> ✔ readr   1.4.0     ✔ forcats 0.5.0
#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
#> ✖ dplyr::filter() masks stats::filter()
#> ✖ dplyr::lag()    masks stats::lag()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
geom_point(mapping = aes(x = displ, y = hwy, color = class)
geom_point(mapping = aes(x = displ, y = hwy, color = class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, shape = class))
?geom_point
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class, stroke = 5))
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'subcompact'), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'subcompact'))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == 'subcompact'), se = FALSE)
?geom_smooth
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = cut, y = depth))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut), show.legend = FALSE,
width = 1) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)+
coord_polar()
library(nycflights13)
install.packages(nycflights13)
install.packages(nycflights13)
library(dplyr)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
?flights
flights
filter(.data = flights, month == 1, day == 1)
filter(flights, month == 11 | month == 12)
#Had an arrival delay of two or more hours
filter(flights, arr_delay >= 120)
#Flew to Houston (IAH or HOU)
filter(flights, dest == IAH | dest == HOU)
#Flew to Houston (IAH or HOU)
filter(flights, dest == 'IAH' | dest == 'HOU')
filter(flights, dest %in% c('IAH', 'HOU'))
filter(flights, carrier %in% c('United', 'American', 'Delta'))
head(flights$carrier)
head(airlines)
airlines
filter(flights, carrier %in% c('UA', 'AA', 'DL'))
#Departed in summer (July, August, and September)
filter(flights, month %in% c(7, 8, 9))
#Arrived more than two hours late, but didn’t leave late
filter(flights, arr_delay > 120 & dep_delay <= 0)
#Were delayed by at least an hour, but made up over 30 minutes in flight
filter(flights, dep_delay >= 60 & arr_delay <=30)
#Departed between midnight and 6am (inclusive)
filter(flights, dep_time %in% c(0000, 0600))
filter(flights, between(dep_time, 0000, 0600)
filter(flights, between(dep_time, 0000, 0600))
#How many flights have a missing dep_time?
filter(flights, dep_time == NA)
NA ^ 0
NA * 0
arrange(flights, year, month, day)
arrange(flights, day, month, year)
arrange(flights, desc(dep_delay))
arrange(flights, desc(is.na()))
arrange(flights, desc(is.na(dep_delay)))
#select() is used to filter variables you are interested in
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
#rename is pretty obvious
rename(flights, tail_num = tailnum)
select(flights, contains("TIME"))
#select() is used to filter variables you are interested in
select(flights, year, month, year)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
library(dplyr)
library(nycflights13)
library(tidyverse)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
View(flights_sml)
?ends_with
mutate(flights_sml,
hours = air_time / 60,
gain_per_hour = gain / hours
)
View(flights_sml)
mutate(flights_sml,
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
View(flights_sml)
View(flights_sml)
mutate(flights_sml,
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
transmute(flights,
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
View(flights_sml)
head(flights)
?flights
transmute(flights,
dep_time,
hour = dep_time %/% 100,
minute = dep_time %% 100,
minutes_since_midnight = hour * 60 + minute
)
view(flights)
transmute(flights,
air_time,
difference = arr_time - dep_time)
transmute(flights,
dep_time,
sched_dep_time,
dep_delay)
?min_rank
flights %>% filter(min_rank(dep_delay))
dep_delay_min_rank = min_rank(desc(dep_delay))
dep_delay_min_rank <- min_rank(desc(dep_delay))
?flights
dep_delay_min_rank = min_rank(dep_delay)
transmute(flights,
dep_delay)
dep_delay_min_rank = min_rank(desc(dep_delay))
?min_rank
filter(flights, min_rank(desc(dep_delay))<=10)
filter(flights, min_rank(desc(dep_delay))<=10)
flights %>% top_n(n = 10, wt = dep_delay)
flights %>% transmute(
dep_delay, rank = min_rank(desc(dep_delay)))
flights %>% transmute(
dep_delay, rank = min_rank(desc(dep_delay)))%>%
filter(rank < 10) %>% arrange(rank) %>% kable
library(tidyverse)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut), show.legend = FALSE,
width = 1) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)+
coord_polar()
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
library(dplyr)
library(nycflights13)
library(tidyverse)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
summarise(avg_delay_by_day, delay = mean(dep_delay, na.rm = TRUE))
avg_delay_by_day <- group_by(flights, year, month, day)
summarise(avg_delay_by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
rm avg_delay_by_day
?rm
rm 'avg_delay_by_day'
rm avg_delay_by_day
avg_delay_by_day <- NULL
rm(avg_delay_by_day)
head(by_day)
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
ggplot(data = delays, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
?Lahman::Batting
?Batting
?Lahman
batting <- as_tibble(Lahman::Batting)
install.packages('Lahman')
library(Lahman)
batting <- as_tibble(Lahman::Batting)
?Lahman
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
head(batting)
?batting
?Lahman::Batting
#Group by PlayerID and measure the batting average(sum of hits divided
#by attempts) and the number of attempts
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
batters %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
